<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ibatorConfiguration
  PUBLIC "-//Apache Software Foundation//DTD Apache iBATIS Ibator Configuration 1.0//EN"
  "http://ibatis.apache.org/dtd/ibator-config_1_0.dtd">

<ibatorConfiguration>
<!-- 	<classPathEntry location="E:/mybatis自动生成代码/demo1/mysql-connector-java-5.1.26-bin.jar" /> -->
	<ibatorContext id="FlatJava5" targetRuntime="Ibatis2Java5">
		<property name="suppressTypeWarnings" value="true" />
		<!-- Serializable化 -->
		<ibatorPlugin type="org.apache.ibatis.ibator.plugins.SerializablePlugin" />
		<!-- 这个插件添加方法为例(实际上的内部类)来支持不区分大小写像搜索。这个演示了增加功能,通过一个实例类插件,而不是延长上课。 -->
		<ibatorPlugin type="org.apache.ibatis.ibator.plugins.CaseInsensitiveLikePlugin" />
		<!-- 分页 -->
		<ibatorPlugin type="org.apache.ibatis.ibator.plugins.PaginationPlugin">
			<property name="enablePagination" value="true" />
			<!-- mysql or oracle -->
			<property name="databaseType" value="mysql" />
		</ibatorPlugin>
		
		<!-- 重命名example类 -->
<!-- 		<ibatorPlugin type="org.apache.ibatis.ibator.plugins.RenameExampleClassPlugin"> -->
<!-- 			<property name="searchString" value="Example$" /> -->
<!-- 			<property name="replaceString" value="Criteria" /> -->
<!-- 		</ibatorPlugin> -->

		<ibatorPlugin type="org.apache.ibatis.ibator.plugins.FilePlugin">
			<property name="targetProject" value="src"/>
			<property name="targetPackage" value="com.demo.service"/>
			<property name="templatePath" value="template/service.ftl"/>
			<property name="mapperSuffix" value="Service"/>
			<property name="fileName" value="${tableClass.shortClassName}${mapperSuffix}.java"/>
		</ibatorPlugin>

		<ibatorPlugin type="org.apache.ibatis.ibator.plugins.FilePlugin">
			<property name="targetProject" value="src"/>
			<property name="targetPackage" value="com.demo.service"/>
			<property name="templatePath" value="template/serviceImpl.ftl"/>
			<property name="mapperSuffix" value="ServiceImpl"/>
			<property name="fileName" value="${tableClass.shortClassName}${mapperSuffix}.java"/>
		</ibatorPlugin>

		<!-- 产生sqlmap.xml  -->
		<ibatorPlugin type="org.apache.ibatis.ibator.plugins.SqlMapConfigPlugin"> 
			<property name="targetPackage" value="config" /> 
			<property name="targetProject" value="src" /> 
		</ibatorPlugin>

		<!-- driverClass="com.mysql.jdbc.Driver" -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8" userId="root" password="root">
			<!-- 是否返回数据库注释，MySQL默认是true，oracle默认是false -->
			<property name="remarksReporting" value="true" />
		</jdbcConnection>
		
		<!-- 自定义的类型解析器 -->
		<javaTypeResolver type="org.apache.ibatis.ibator.internal.types.MyJavaTypeResolver">
			<property name="forceBigDecimals" value="true"/>
		</javaTypeResolver>
		
		<javaModelGenerator targetPackage="com.demo.model" targetProject="src">
			<!-- 如果为TRUE，下面的设置了schema,那么包名就是会增加个schema名， 如果schema=“aaa” , test.pojo.aaa.XXXX; <property name="enableSubPackages" value="true" /> -->
			<!-- 继承哪个父类，这个为了有时候日志需要打印整个对象，而采用的apache打印对象的每个属性 -->
<!-- 			<property name="rootClass" value="ibator.BaseBean" /> -->
		</javaModelGenerator>

		<sqlMapGenerator targetPackage="mappers" targetProject="src">
			<!-- <property name="enableSubPackages" value="true" /> -->
		</sqlMapGenerator>

		<daoGenerator type="SPRING" targetPackage="com.demo.dao" implementationPackage="com.demo.dao" targetProject="src">
			<!-- <property name="enableSubPackages" value="true" /> -->
		</daoGenerator>

		<serviceGenerator targetPackage="com.demo.service" implementationPackage="com.demo.service" targetProject="src">
			<!-- <property name="enableSubPackages" value="true" /> -->
		</serviceGenerator>

		<!-- 如果数据库里面有多个相同表名在不同的schema下，那么你得加上: schema="XXXX"和<property name="ignoreQualifiersAtRuntime" value="true" /> 不然ibator会以找到的最后一个为最终对象，这个问题苦恼了我很久，后来才发现 -->
		<table tableName="t_column_type" schema="test">
			<!-- 忽略schema，避免在xml中出现schema.表名 -->
			<property name="ignoreQualifiersAtRuntime" value="true" />
			<!-- mysql返回自增主键 -->
			<generatedKey column="id" sqlStatement="SELECT LAST_INSERT_ID()" identity="true" />
			<!-- oracle返回自增主键 -->
<!-- 			<generatedKey column="id" sqlStatement="SELECT SEQ_STUDENT.NEXTVAL FROM DUAL AS id" /> -->
			<!-- 列名前缀替换 -->
<!-- 				<columnRenamingRule searchString="^t_" replaceString="" /> -->
			<!-- 精确到时分秒时，需要设置下： jdbcType="TIMESTAMP" -->
<!-- 			<columnOverride column="hiredate" jdbcType="TIMESTAMP" /> -->
		</table>
	</ibatorContext>
</ibatorConfiguration>
